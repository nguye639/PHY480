%!PS-Adobe-2.0
%%Title: eigen.ps
%%Creator: gnuplot 5.2 patchlevel 6
%%CreationDate: Wed Feb  6 18:02:13 2019
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.2 (Dec 2017)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTB {BL [] LCb DL} def
/LTw {PL [] 1 setgray} def
/LTb {PL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto closepath gsave fill grestore stroke} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
/Metrics {ExtendTextBox Gswidth} def
/Lwidth {currentpoint stroke M 0 vshift R Metrics} def
/Rwidth {currentpoint stroke M dup stringwidth pop neg vshift R Metrics} def
/Cwidth {currentpoint stroke M dup stringwidth pop -2 div vshift R Metrics} def
/GLwidth {currentpoint stroke M 0 vshift R {ExtendTextBox} forall} def
/GRwidth {currentpoint stroke M dup Gwidth vshift R {ExtendTextBox} forall} def
/GCwidth {currentpoint stroke M dup Gwidth 2 div vshift R {ExtendTextBox} forall} def
/GLwidth2 {0 Gwidth AddGlyphWidth} def
/GRwidth2 {Gwidth -1 mul 0 AddGlyphWidth} def
/GCwidth2 {Gwidth 2 div dup -1 mul AddGlyphWidth} def
/AddGlyphWidth { dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
                 dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse } def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {textshow} {Metrics pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get Gswidth pop -2 div
     dup 0 R} {dup 6 get Gswidth pop -2 div 0 R 6 get
     textshow 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (eigen.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.2 patchlevel 6)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  6 18:02:13 2019)
  /DOCINFO pdfmark
end
} ifelse
%
% Support for boxed text - Ethan A Merritt Sep 2016
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { dup type /stringtype eq
    { Boxing { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if }
    {} ifelse} def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
LCb setrgbcolor
1106 448 M
63 0 V
5778 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.0000010)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1.000 UL
LTb
LCb setrgbcolor
1106 657 M
31 0 V
5810 0 R
-31 0 V
1106 780 M
31 0 V
5810 0 R
-31 0 V
1106 867 M
31 0 V
5810 0 R
-31 0 V
1106 934 M
31 0 V
5810 0 R
-31 0 V
1106 989 M
31 0 V
5810 0 R
-31 0 V
-5810 46 R
31 0 V
5810 0 R
-31 0 V
-5810 41 R
31 0 V
5810 0 R
-31 0 V
-5810 35 R
31 0 V
5810 0 R
-31 0 V
-5810 32 R
63 0 V
5778 0 R
-63 0 V
stroke
1022 1143 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.0000100)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1106 1352 M
31 0 V
5810 0 R
-31 0 V
1106 1475 M
31 0 V
5810 0 R
-31 0 V
-5810 87 R
31 0 V
5810 0 R
-31 0 V
-5810 67 R
31 0 V
5810 0 R
-31 0 V
-5810 55 R
31 0 V
5810 0 R
-31 0 V
-5810 47 R
31 0 V
5810 0 R
-31 0 V
-5810 40 R
31 0 V
5810 0 R
-31 0 V
-5810 36 R
31 0 V
5810 0 R
-31 0 V
-5810 31 R
63 0 V
5778 0 R
-63 0 V
stroke
1022 1838 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.0001000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1106 2048 M
31 0 V
5810 0 R
-31 0 V
1106 2170 M
31 0 V
5810 0 R
-31 0 V
-5810 87 R
31 0 V
5810 0 R
-31 0 V
-5810 67 R
31 0 V
5810 0 R
-31 0 V
-5810 55 R
31 0 V
5810 0 R
-31 0 V
-5810 47 R
31 0 V
5810 0 R
-31 0 V
-5810 40 R
31 0 V
5810 0 R
-31 0 V
-5810 36 R
31 0 V
5810 0 R
-31 0 V
-5810 32 R
63 0 V
5778 0 R
-63 0 V
stroke
1022 2534 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.0010000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1106 2743 M
31 0 V
5810 0 R
-31 0 V
1106 2865 M
31 0 V
5810 0 R
-31 0 V
-5810 87 R
31 0 V
5810 0 R
-31 0 V
-5810 67 R
31 0 V
5810 0 R
-31 0 V
-5810 55 R
31 0 V
5810 0 R
-31 0 V
-5810 47 R
31 0 V
5810 0 R
-31 0 V
-5810 40 R
31 0 V
5810 0 R
-31 0 V
-5810 36 R
31 0 V
5810 0 R
-31 0 V
-5810 32 R
63 0 V
5778 0 R
-63 0 V
stroke
1022 3229 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.0100000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1106 3438 M
31 0 V
5810 0 R
-31 0 V
1106 3560 M
31 0 V
5810 0 R
-31 0 V
-5810 87 R
31 0 V
5810 0 R
-31 0 V
-5810 68 R
31 0 V
5810 0 R
-31 0 V
-5810 55 R
31 0 V
5810 0 R
-31 0 V
-5810 46 R
31 0 V
5810 0 R
-31 0 V
-5810 40 R
31 0 V
5810 0 R
-31 0 V
-5810 36 R
31 0 V
5810 0 R
-31 0 V
-5810 32 R
63 0 V
5778 0 R
-63 0 V
stroke
1022 3924 M
[ [(Helvetica) 140.0 0.0 true true 0 (0.1000000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1106 4133 M
31 0 V
5810 0 R
-31 0 V
1106 4256 M
31 0 V
5810 0 R
-31 0 V
-5810 86 R
31 0 V
5810 0 R
-31 0 V
-5810 68 R
31 0 V
5810 0 R
-31 0 V
-5810 55 R
31 0 V
5810 0 R
-31 0 V
-5810 46 R
31 0 V
5810 0 R
-31 0 V
-5810 41 R
31 0 V
5810 0 R
-31 0 V
-5810 35 R
31 0 V
5810 0 R
-31 0 V
-5810 32 R
63 0 V
5778 0 R
-63 0 V
stroke
1022 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 (1.0000000)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
1106 448 M
0 31 V
0 4140 R
0 -31 V
1553 448 M
0 31 V
0 4140 R
0 -31 V
1870 448 M
0 31 V
0 4140 R
0 -31 V
2116 448 M
0 31 V
0 4140 R
0 -31 V
2317 448 M
0 31 V
0 4140 R
0 -31 V
2487 448 M
0 31 V
0 4140 R
0 -31 V
2634 448 M
0 31 V
0 4140 R
0 -31 V
2764 448 M
0 31 V
0 4140 R
0 -31 V
2880 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2880 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
3644 448 M
0 31 V
0 4140 R
0 -31 V
4091 448 M
0 31 V
0 4140 R
0 -31 V
4409 448 M
0 31 V
0 4140 R
0 -31 V
4655 448 M
0 31 V
0 4140 R
0 -31 V
4856 448 M
0 31 V
0 4140 R
0 -31 V
5026 448 M
0 31 V
0 4140 R
0 -31 V
5173 448 M
0 31 V
0 4140 R
0 -31 V
5303 448 M
0 31 V
0 4140 R
0 -31 V
5419 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5419 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 100)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
LCb setrgbcolor
6183 448 M
0 31 V
0 4140 R
0 -31 V
6630 448 M
0 31 V
0 4140 R
0 -31 V
6947 448 M
0 31 V
0 4140 R
0 -31 V
stroke
LTB
LCb setrgbcolor
1106 4619 N
0 -4171 V
5841 0 V
0 4171 V
-5841 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LCb setrgbcolor
126 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Time)]
] -46.7 MCshow
grestore
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
4026 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Dimenson)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
LTb
LCb setrgbcolor
4026 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Maxtix size vs time)]
] -46.7 MCshow
/Helvetica findfont 140 scalefont setfont
% Begin plot #1
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
LCb setrgbcolor
6296 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (dim vs time)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C
1106 1285 Pls
1553 1562 Pls
1870 867 Pls
2116 867 Pls
2317 867 Pls
2487 934 Pls
2634 934 Pls
2764 1035 Pls
2880 1076 Pls
2985 1172 Pls
3081 1245 Pls
3170 1266 Pls
3251 1337 Pls
3327 1381 Pls
3398 1407 Pls
3465 1420 Pls
3528 1475 Pls
3588 1494 Pls
3644 1530 Pls
3698 1562 Pls
3750 1597 Pls
3799 1641 Pls
3845 1663 Pls
3890 1775 Pls
3934 1847 Pls
3975 1875 Pls
4015 1906 Pls
4054 1913 Pls
4091 1953 Pls
4128 1847 Pls
4163 1881 Pls
4196 1908 Pls
4229 1946 Pls
4261 1963 Pls
4292 2032 Pls
4323 2068 Pls
4352 2209 Pls
4381 2234 Pls
4409 2219 Pls
4436 2249 Pls
4462 2260 Pls
4488 2284 Pls
4514 2308 Pls
4538 2330 Pls
4563 2333 Pls
4586 2342 Pls
4610 2277 Pls
4632 2233 Pls
4655 2251 Pls
4676 2268 Pls
4698 2277 Pls
4719 2300 Pls
4739 2351 Pls
4760 2376 Pls
4780 2354 Pls
4799 2378 Pls
4818 2395 Pls
4837 2410 Pls
4856 2497 Pls
4874 2491 Pls
4892 2492 Pls
4909 2482 Pls
4927 2510 Pls
4944 2514 Pls
4961 2485 Pls
4977 2502 Pls
4994 2520 Pls
5010 2533 Pls
5026 2533 Pls
5041 2548 Pls
5057 2565 Pls
5072 2589 Pls
5087 2589 Pls
5102 2622 Pls
5116 2744 Pls
5131 2694 Pls
5145 2626 Pls
5159 2631 Pls
5173 2656 Pls
5186 2666 Pls
5200 2776 Pls
5213 2765 Pls
5227 2753 Pls
5240 2762 Pls
5252 2772 Pls
5265 2791 Pls
5278 2793 Pls
5290 2815 Pls
5303 2808 Pls
5315 2834 Pls
5327 2836 Pls
5339 2857 Pls
5351 2863 Pls
5362 2868 Pls
5374 2833 Pls
5385 2821 Pls
5396 2845 Pls
5408 2830 Pls
5419 2849 Pls
5430 2853 Pls
5441 2865 Pls
5451 2873 Pls
5462 2885 Pls
5473 3006 Pls
5483 2946 Pls
5493 2907 Pls
5504 2911 Pls
5514 2921 Pls
5524 2931 Pls
5534 2935 Pls
5544 2954 Pls
5553 2947 Pls
5563 2959 Pls
5573 2972 Pls
5582 2974 Pls
5592 2977 Pls
5601 2995 Pls
5610 2997 Pls
5620 3010 Pls
5629 3011 Pls
5638 3012 Pls
5647 3020 Pls
5656 3034 Pls
5665 3038 Pls
5673 3049 Pls
5682 3054 Pls
5691 3294 Pls
5699 3066 Pls
5708 3073 Pls
5716 3091 Pls
5725 3105 Pls
5733 3101 Pls
5741 3100 Pls
5750 3118 Pls
5758 3130 Pls
5766 3119 Pls
5774 3123 Pls
5782 3132 Pls
5790 3137 Pls
5797 3144 Pls
5805 3179 Pls
5813 3159 Pls
5821 3192 Pls
5828 3210 Pls
5836 3180 Pls
5843 3183 Pls
5851 3187 Pls
5858 3197 Pls
5866 3202 Pls
5873 3222 Pls
5880 3241 Pls
5888 3249 Pls
5895 3241 Pls
5902 3238 Pls
5909 3268 Pls
5916 3241 Pls
5923 3249 Pls
5930 3255 Pls
5937 3401 Pls
5944 3268 Pls
5951 3271 Pls
5957 3279 Pls
5964 3289 Pls
5971 3286 Pls
5977 3296 Pls
5984 3345 Pls
5991 3328 Pls
5997 3315 Pls
6004 3319 Pls
6010 3401 Pls
6017 3326 Pls
6023 3335 Pls
6029 3343 Pls
6036 3365 Pls
6042 3380 Pls
6048 3355 Pls
6054 3371 Pls
6061 3363 Pls
6067 3374 Pls
6073 3383 Pls
6079 3382 Pls
6085 3413 Pls
6091 3409 Pls
6097 3404 Pls
6103 3411 Pls
6109 3413 Pls
6115 3419 Pls
6120 3432 Pls
6126 3430 Pls
6132 3448 Pls
6138 3602 Pls
6144 3451 Pls
6149 3464 Pls
6155 3484 Pls
6161 3500 Pls
6166 3533 Pls
6172 3480 Pls
6177 3490 Pls
6183 3536 Pls
6188 3503 Pls
6194 3504 Pls
6199 3509 Pls
6205 3515 Pls
6210 3577 Pls
6215 3499 Pls
6221 3505 Pls
6226 3543 Pls
6231 3515 Pls
6237 3515 Pls
6242 3529 Pls
6247 3530 Pls
6252 3531 Pls
6257 3538 Pls
6263 3542 Pls
6268 3554 Pls
6273 3548 Pls
6278 3550 Pls
6283 3558 Pls
6288 3564 Pls
6293 3569 Pls
6298 3581 Pls
6303 3585 Pls
6308 3715 Pls
6313 3593 Pls
6318 3593 Pls
6322 3595 Pls
6327 3608 Pls
6332 3672 Pls
6337 3608 Pls
6342 3611 Pls
6346 3627 Pls
6351 3622 Pls
6356 3629 Pls
6361 3722 Pls
6365 3631 Pls
6370 3640 Pls
6375 3639 Pls
6379 3702 Pls
6384 3728 Pls
6388 3709 Pls
6393 3652 Pls
6398 3658 Pls
6402 3661 Pls
6407 3668 Pls
6411 3670 Pls
6416 3677 Pls
6420 3681 Pls
6424 3681 Pls
6429 3686 Pls
6433 3690 Pls
6438 3693 Pls
6442 3752 Pls
6446 3693 Pls
6451 3699 Pls
6455 4086 Pls
6459 3711 Pls
6464 3712 Pls
6468 3715 Pls
6472 3721 Pls
6476 3730 Pls
6481 3724 Pls
6485 3737 Pls
6489 3747 Pls
6493 3735 Pls
6497 3738 Pls
6501 3749 Pls
6506 3745 Pls
6510 3763 Pls
6514 3751 Pls
6518 3787 Pls
6522 3830 Pls
6526 3800 Pls
6530 3770 Pls
6534 3771 Pls
6538 3777 Pls
6542 3779 Pls
6546 3783 Pls
6550 3796 Pls
6554 3803 Pls
6558 3796 Pls
6562 3796 Pls
6566 3802 Pls
6569 3825 Pls
6573 3807 Pls
6577 3818 Pls
6581 3819 Pls
6585 3947 Pls
6589 3824 Pls
6592 3829 Pls
6596 3826 Pls
6600 3827 Pls
6604 3835 Pls
6608 3848 Pls
6611 3843 Pls
6615 3860 Pls
6619 3846 Pls
6622 3852 Pls
6626 3855 Pls
6630 3864 Pls
6634 3869 Pls
6637 3866 Pls
6641 3874 Pls
6644 3971 Pls
6648 3879 Pls
6652 3881 Pls
6655 3913 Pls
6659 3886 Pls
6662 3890 Pls
6666 3896 Pls
6670 3919 Pls
6673 3924 Pls
6677 3902 Pls
6680 3911 Pls
6684 3927 Pls
6687 3922 Pls
6691 3976 Pls
6694 3919 Pls
6698 3927 Pls
6701 4064 Pls
6704 3930 Pls
6708 3930 Pls
6711 3936 Pls
6715 3939 Pls
6718 3950 Pls
6721 3947 Pls
6725 3950 Pls
6728 3974 Pls
6732 3961 Pls
6735 3961 Pls
6738 3961 Pls
6742 3966 Pls
6745 3961 Pls
6748 3976 Pls
6752 3974 Pls
6755 4066 Pls
6758 4008 Pls
6761 3989 Pls
6765 3986 Pls
6768 3989 Pls
6771 4100 Pls
6774 3998 Pls
6778 3991 Pls
6781 4025 Pls
6784 4008 Pls
6787 4008 Pls
6790 4012 Pls
6793 4014 Pls
6797 4019 Pls
6800 4021 Pls
6803 4023 Pls
6806 4130 Pls
6809 4025 Pls
6812 4032 Pls
6815 4038 Pls
6819 4038 Pls
6822 4040 Pls
6825 4040 Pls
6828 4048 Pls
6831 4069 Pls
6834 4050 Pls
6837 4058 Pls
6840 4064 Pls
6843 4066 Pls
6846 4062 Pls
6849 4075 Pls
6852 4068 Pls
6855 4156 Pls
6858 4071 Pls
6861 4077 Pls
6864 4086 Pls
6867 4080 Pls
6870 4084 Pls
6873 4093 Pls
6876 4089 Pls
6879 4119 Pls
6882 4101 Pls
6885 4101 Pls
6888 4103 Pls
6890 4111 Pls
6893 4101 Pls
6896 4125 Pls
6899 4110 Pls
6902 4326 Pls
6905 4114 Pls
6908 4127 Pls
6911 4121 Pls
6913 4133 Pls
6916 4133 Pls
6919 4130 Pls
6922 4139 Pls
6925 4154 Pls
6928 4142 Pls
6930 4155 Pls
6933 4158 Pls
6936 4155 Pls
6939 4148 Pls
6941 4156 Pls
6944 4159 Pls
6947 4238 Pls
6579 4486 Pls
% End plot #1
% Begin plot #2
1.000 UL
LTb
0.00 0.62 0.45 C
LCb setrgbcolor
6296 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (+0.0*x -0.4)]
] -46.7 MRshow
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
0.00 0.62 0.45 C
6380 4346 M
399 0 V
6416 2395 M
59 1046 V
59 212 V
59 129 V
59 95 V
59 75 V
59 63 V
59 55 V
59 49 V
59 44 V
% End plot #2
stroke
2.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTB
LCb setrgbcolor
1106 4619 N
0 -4171 V
5841 0 V
0 4171 V
-5841 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
